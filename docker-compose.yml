version: "3.8"
services:
  influxdb:
    image: influxdb:2.7.6-alpine
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - metrics-net
    environment:
      # NOTE: to do infinite retention, set DOCKER_INFLUXDB_INIT_RETENTION to 0
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_UNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
  grafana:
    image: grafana/grafana:11.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://metrik.science/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DATASOURCES_DEFAULTDATASOURCE_INFLUXDB_TYPE=flux
      - GF_DATASOURCES_DEFAULTDATASOURCE_INFLUXDB_URL=http://influxdb:8086
      - GF_DATASOURCES_DEFAULTDATASOURCE_INFLUXDB_ORG=stanford
      - GF_DATASOURCES_DEFAULTDATASOURCE_INFLUXDB_BUCKET=dgg-lab
      - GF_DATASOURCES_DEFAULTDATASOURCE_INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    depends_on:
      - influxdb
    networks:
      - metrics-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "1"
  nginx:
    image: nginx:1.27.2-alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - certbot_certs:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - grafana
      - influxdb
    networks:
      - metrics-net

volumes:
  influxdb_data:
  grafana_data:

networks:
  metrics-net:
    driver: bridge
